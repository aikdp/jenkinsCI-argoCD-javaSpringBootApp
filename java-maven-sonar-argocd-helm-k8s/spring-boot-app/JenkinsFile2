pipeline {
    agent {
        docker {
            image 'kdprasad028/maven-aikdp-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    
    environment {
        SONAR_URL = "http://34.235.121.224:9000"
        DOCKER_IMAGE = "kdprasad028/ultimate-cicd:${BUILD_NUMBER}"
        GIT_REPO_NAME = "jenkinsCI-argoCD-javaSpringBootApp"
        GIT_USER_NAME = "aikdp"
    }

    stages {
        stage('Checkout') {
            steps {
                sh 'echo "Repository already cloned by Jenkins"'
            }
        }

        stage('Build and Test') {
            steps {
                sh '''
                    ls -ltr
                    cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                    mvn clean package
                '''
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                        mvn sonar:sonar -Dsonar.token=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    sh '''
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                        docker build -t ${DOCKER_IMAGE} .
                    '''
                    
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config --global user.email "kdprasad028@gmail.com"
                        git config --global user.name "aikdp"
                        git config --global --add safe.directory /var/lib/jenkins/workspace/argocd

                        # Ensure we are on the correct branch
                        git checkout main
                        git pull --rebase origin main

                        # Update image tag in deployment manifest
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add -A
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"

                        # Push changes to GitHub
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
                    '''
                }
            }
        }
    }
}
